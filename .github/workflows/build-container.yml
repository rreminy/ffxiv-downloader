name: Build Container
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: WorkingRobot/ffxiv-downloader

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          submodules: recursive

      - name: Check Version
        id: version
        uses: issue-ops/semver@v2
        with:
          check-only: true
          manifest-path: action.yml
          workspace: ${{ github.workspace }}

      - name: Set Image Tags
        id: tags
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.version.outputs.version }}'

            // Check if prerelease (e.g. 1.2.3-alpha.4)
            if (version.includes('-')) {
              // Only output the prerelease tag
              core.setOutput('tags', `type=raw,value=v${version}`)
            } else {
              // Output all the tags
              let tags = [
                'type=raw,value=latest',
                `type=raw,value=v${version}`,
                `type=raw,value=v${version.split('.').slice(0, 2).join('.')}`,
                `type=raw,value=v${version.split('.')[0]}`
              ]
              core.setOutput('tags', tags.join('\n'))
            }

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ steps.tags.outputs.tags }}

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Attest image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true